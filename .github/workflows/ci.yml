name: CI

on: [push, pull_request]

jobs:
  build:
    name: "${{ matrix.type }}"
    runs-on: [ubuntu-20.04]

    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      fail-fast: false
      matrix:
        type:
          - default
          - OpenSSL 1.1.0
          - OpenSSL 1.1.1
          - DTrace
        include:
          - type: default
            task: ALL
          - type: OpenSSL 1.1.0
            task: ossl1.1.0
          - type: OpenSSL 1.1.1
            task: ossl1.1.1
          - type: Fuzz
            task: fuzz
          - type: DTrace
            task: dtrace
            container: h2oserver/h2o-ci:ubuntu2004

    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Run with Docker
      shell: 'script -q -e -c "bash {0}"'
      run: |
        chmod -R ugo+w .
        if [ -n "${{ matrix.container }}" ] ; then
          export CONTAINER_NAME="${{ matrix.container }}"
        fi
        make -f misc/docker-ci/check.mk ${{ matrix.task }}

  # See https://github.com/google/oss-fuzz/tree/master/projects/h2o for details
  ossfuzz:
    name: OSS Fuzz
    runs-on: ubuntu-latest

    # see above
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    timeout-minutes: 60
    steps:
    - name: Build Fuzzers
      uses: google/oss-fuzz/infra/cifuzz/actions/build_fuzzers@master
      with:
        oss-fuzz-project-name: 'h2o'
        dry-run: false
    - name: Run Fuzzers
      uses: google/oss-fuzz/infra/cifuzz/actions/run_fuzzers@master
      with:
        oss-fuzz-project-name: 'h2o'
        fuzz-seconds: 600
        dry-run: false
    - name: Upload Crash
      uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: artifacts
        path: ./out/artifacts
